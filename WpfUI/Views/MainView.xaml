<UserControl x:Class="RcktMon.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cal="http://caliburnmicro.com"
             xmlns:componentmodel="clr-namespace:System.ComponentModel;assembly=WindowsBase" 
             xmlns:viewModels="clr-namespace:RcktMon.ViewModels" xmlns:controls="clr-namespace:RcktMon.Controls"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel}"
             d:DesignHeight="1000" d:DesignWidth="1600">
    <UserControl.Resources>
        <CollectionViewSource IsLiveSortingRequested="True" Source="{Binding Stocks.Values}" x:Key="StocksCollectionView">
            <CollectionViewSource.SortDescriptions>
                <componentmodel:SortDescription PropertyName="DayChange" Direction="Descending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
         <CollectionViewSource IsLiveSortingRequested="True" Source="{Binding Instruments.Values}" x:Key="InstrumentsCollectionView">
            <CollectionViewSource.SortDescriptions>
                <componentmodel:SortDescription PropertyName="Ticker" Direction="Ascending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <CollectionViewSource Source="{Binding Messages}" x:Key="EventsCollectionView">
            <CollectionViewSource.SortDescriptions>
                <componentmodel:SortDescription PropertyName="Date" Direction="Descending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <InverseBoolToVisibilityConverter x:Key="InvertedBoolToVisConverter" />
        
        <Style TargetType="Button" x:Key="CircleButton">
            <Setter Property="Width" Value="16" />
            <Setter Property="Height" Value="16" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Background" Value="Yellow" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Height="{TemplateBinding Height}"
                                CornerRadius="8" Name="ButtonBorder"
                                Background="{TemplateBinding Background}" 
                                Width="{TemplateBinding Width}">
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <ControlTemplate x:Key="TickerButtons">
            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource CircleButton}"
                        cal:Message.Attach="[Event Click] = [Action ChangeTickerViaExt($dataContext, $this.Tag)]"
                        Tag="3"
                        ToolTip="Группа 3 в терминале" 
                        Background="#fff100" />
                <Button Style="{StaticResource CircleButton}" 
                        cal:Message.Attach="[Event Click] = [Action ChangeTickerViaExt($dataContext, $this.Tag)]"
                        Tag="6"
                        ToolTip="Группа 6 в терминале" 
                        Background="#e81224" />
                <Button Style="{StaticResource CircleButton}"   
                        cal:Message.Attach="[Event Click] = [Action ChangeTickerViaExt($dataContext, $this.Tag)]"
                        Tag="8"
                        ToolTip="Группа 8 в терминале" 
                        Background="#886ce4" />
                <Button Style="{StaticResource CircleButton}"   
                        cal:Message.Attach="[Event Click] = [Action ChangeTickerViaExt($dataContext, $this.Tag)]"
                        Tag="10"
                        ToolTip="Группа 10 в терминале" 
                        Background="#0078d7" />
                <Button Style="{StaticResource CircleButton}"   
                        cal:Message.Attach="[Event Click] = [Action ChangeTickerViaExt($dataContext, $this.Tag)]"
                        Tag="14"
                        ToolTip="Группа 14 в терминале" 
                        Background="#16c60c" />
            </StackPanel>
        </ControlTemplate>

        <DataTemplate x:Key="NameColumnDataTemplate">
            <Border Background="Transparent">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Binding Name}" Padding="0 2"
                               VerticalAlignment="Center"
                               TextTrimming="CharacterEllipsis" />
                    <ContentControl Name="PART_TickerButtons" Visibility="Collapsed"
                                    Grid.Column="1"
                                    Template="{StaticResource TickerButtons}" />
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="PART_TickerButtons" Property="Visibility" Value="Visible" />
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </UserControl.Resources>
    
    <Grid x:Name="LayoutGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Border Background="#c05102" Padding="8 6" Name="UpdateNotificationBorder"
                Visibility="{Binding LastRelease.IsNewer, Converter={StaticResource BooleanToVisibilityConverter}}">

            <Grid VerticalAlignment="Center" TextBlock.FontSize="14"  ToolTip="{Binding LastRelease}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock>
                    <Run Text="{Binding LastRelease.Version, StringFormat={}Доступно обновление до версии {0}.}" />&#160;
                    <Hyperlink Click="ShowUpdateDetailsHyperlinkClicked" Foreground="LightGoldenrodYellow">Посмотреть детали обновления</Hyperlink>&#160;
                    <Hyperlink Click="InstallUpdateHyperlinkClicked"
                               Foreground="LightGoldenrodYellow" Cursor="Hand">
                        <Run Text="{Binding UpdateLinkText}" />
                    </Hyperlink>
                </TextBlock>
                 
                <TextBlock Grid.Column="2">
                    <Hyperlink Click="CloseUpdateNotificationHyperlinkClick" Foreground="LightGoldenrodYellow"
                                       FontStyle="Italic" FontWeight="Normal"><Run Text="[x]"/></Hyperlink>
                </TextBlock>
            </Grid>
        </Border>

        <DockingManager Grid.Row="1">
            <DockingManager.Theme>
                <Vs2013DarkTheme />
            </DockingManager.Theme>

            <LayoutRoot>
                <LayoutPanel DockHeight="*" DockWidth="*">
                    <LayoutPanel Orientation="Vertical">
                        <LayoutDocumentPane>
                            <LayoutDocument ContentId="Stocks" Title="Мониторинг" x:Name="StocksDoc">

                                <DataGrid IsReadOnly="True"
                                        Name="StocksDataGrid"
                                        ItemsSource="{Binding Source={StaticResource StocksCollectionView}}" 
                                        VirtualizingPanel.IsVirtualizing="True" 
                                        VirtualizingPanel.IsContainerVirtualizable="True"
                                        VirtualizingPanel.VirtualizationMode="Recycling"
                                        SelectedItem="{Binding SelectedStock}"
                                        LayoutUpdated="DataGrid_LayoutUpdated"
                                        ScrollViewer.CanContentScroll="True" PreviewMouseDoubleClick="StocksDataGrid_OnPreviewMouseDoubleClick"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                        AutoGenerateColumns="False">
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn
                                                            Width="220"
                                                            CellTemplate="{StaticResource NameColumnDataTemplate}"
                                                            SortMemberPath="Name"
                                                            Header="Company name" />
                                        <DataGridTextColumn Binding="{Binding Ticker}" Header="Tick" />
                                        <DataGridTextColumn Binding="{Binding Currency}" Header="Cur" />
                                        <DataGridTextColumn Binding="{Binding TodayOpen}" Header="Open" />
                                        <DataGridTextColumn Binding="{Binding Price}" Header="Last" />
                                        <DataGridTextColumn Binding="{Binding DayChange, StringFormat=P2}" Header="Chg" SortDirection="Descending" />
                                        <DataGridTextColumn Binding="{Binding DayVolume}" Header="Day Vol" />
                                        <DataGridTextColumn Binding="{Binding DayVolChgOfAvg, StringFormat=P2}" Header="% Avg" />
                                        <DataGridTextColumn Binding="{Binding BestBidSpb}" Header="BB TI" />
                                        <DataGridTextColumn Binding="{Binding BestAskSpb}" Header="BA TI" />
                                        <DataGridTextColumn Binding="{Binding PriceAcc}" Header="Acc" />
                                        <DataGridTextColumn Binding="{Binding PriceAccAvg}" Header="T Acc Avg" />
                                        <DataGridTextColumn Binding="{Binding TicksPerMinute}" Header="T/min" />
                                        <DataGridTextColumn Binding="{Binding LotPrice}" Header="Lot price" />
                                        <DataGridTextColumn Binding="{Binding M5Change, StringFormat=P2}" Header="M5 Chg" />
                                        <DataGridTextColumn Binding="{Binding HourChange, StringFormat=P2}" Header="H Chg" />
                                        <DataGridTextColumn Binding="{Binding MonthChange, StringFormat=P2}" Header="Month Chg" />
                                        <DataGridTextColumn Binding="{Binding YearChange, StringFormat=P2}" Header="Year Chg" />
                                        <DataGridTextColumn Binding="{Binding Exchange}" Header="EXCHG" />
                                        <DataGridTextColumn Binding="{Binding LimitDown}" Header="DWN LIM" />
                                        <DataGridTextColumn Binding="{Binding LimitUp}" Header="UP LIM" />
                                        <DataGridTextColumn Binding="{Binding Status}" Header="Status" Width="80" />
                                        <DataGridTextColumn Binding="{Binding PriceUSA}" Header="USA LAST" x:Name="PriceUSAColumn" />
                                        <DataGridTextColumn Binding="{Binding DiffPercentUSA, StringFormat=P2}" Header="USA Diff" x:Name="DiffUSAColumn" />
                                        <DataGridTextColumn Binding="{Binding BidUSA}" Header="BB USA" x:Name="BidUSAColumn" />
                                        <DataGridTextColumn Binding="{Binding USBidRUAskDiff, StringFormat=P2}" Header="Bid Diff" x:Name="BidDiffUSAColumn"  />
                                        <DataGridTextColumn Binding="{Binding AskUSA}" Header="BA USA" x:Name="BidAskUSAColumn" />
                                        <DataGridTextColumn Binding="{Binding RUBidUSAskDiff, StringFormat=P2}" Header="Ask Diff" x:Name="AskDiffUSAColumn" />
                                        <DataGridTextColumn Binding="{Binding LastUpdatePrice, StringFormat=HH:mm:ss.ff}" Header="Last Upd" />
                                    </DataGrid.Columns>
                                </DataGrid>

                            </LayoutDocument>

                            <LayoutDocument ContentId="InstrumentsStatus" Title="Статус инструментов" x:Name="InstrumentStatusDoc">

                                <DataGrid IsReadOnly="True" 
                                          Name="InstrumentsDataGrid"
                                          ItemsSource="{Binding Source={StaticResource InstrumentsCollectionView}}" 
                                        VirtualizingPanel.IsVirtualizing="True" 
                                        VirtualizingPanel.IsContainerVirtualizable="True"
                                        VirtualizingPanel.VirtualizationMode="Recycling"
                                        SelectedItem="{Binding SelectedInstrument}"
                                        ScrollViewer.CanContentScroll="True"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                        AutoGenerateColumns="False" >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding Ticker}" Header="Ticker" />
                                        <DataGridTextColumn Binding="{Binding Isin}" Header="Isin" />
                                        <DataGridTextColumn Binding="{Binding Sector}" Header="Sector" />
                                        <DataGridTextColumn Binding="{Binding Exchange}" Header="Exchange" />
                                        <DataGridTextColumn Binding="{Binding MarketStartTime}" Header="Mrkt Strt" />
                                        <DataGridTextColumn Binding="{Binding MarketEndTime}" Header="Mrkt End" />
                                        <DataGridTextColumn Binding="{Binding ShortIsEnabled}" Header="Short" />
                                        <DataGridTextColumn Binding="{Binding ExchangeStatus}" Header="Exchg Status" />
                                        <DataGridTextColumn Binding="{Binding InstrumentStatus}" Header="Instr Status" />
                                        <DataGridTextColumn Binding="{Binding InstrumentStatusShortDesc}" Header="Instr Status Descr" />
                                    </DataGrid.Columns>
                                </DataGrid>

                            </LayoutDocument>

                        </LayoutDocumentPane>

                        <LayoutAnchorablePane DockHeight="200">

                            <LayoutAnchorable ContentId="Alerts" Title="Лог событий" x:Name="EventDoc">

                                <DataGrid IsReadOnly="True" x:Name="LogDataGrid"
                                          ItemsSource="{Binding Source={StaticResource EventsCollectionView}}" AutoGenerateColumns="False">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding Ticker}" Header="Тикер" />
                                        <DataGridTextColumn Binding="{Binding Change, StringFormat=P2}" Header="Изменение" />
                                        <DataGridTextColumn Binding="{Binding Volume}" Header="Объём" />
                                        <DataGridTextColumn Binding="{Binding Text}" Header="Сообщение" />
                                        <DataGridTextColumn Binding="{Binding Date}" Header="Дата события" />
                                        <DataGridTemplateColumn Header="Действия">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal" Name="ActionsText">
                                                        <ContentControl
                                                            Template="{StaticResource TickerButtons}" />
                                                        <TextBlock>
                                                            <Hyperlink Foreground="LightGoldenrodYellow" 
                                                                       ToolTip="Копировать тикер"
                                                                       Click="HyperlinkCopyTicker_OnClick">
                                                                [Copy ticker]
                                                            </Hyperlink>
                                                            <Run></Run>
                                                            <Hyperlink Foreground="LightGoldenrodYellow" 
                                                                       ToolTip="Открыть в Авроре"
                                                                       Click="HyperlinkOpenInAurora_OnClick">
                                                                [Set in Aurora]
                                                            </Hyperlink>
                                                        </TextBlock>
                                                    </StackPanel>
                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding Ticker}" Value="ERROR">
                                                            <Setter TargetName="ActionsText" Property="Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>

                            </LayoutAnchorable>

                        </LayoutAnchorablePane>

                    </LayoutPanel>

                    <!--<LayoutPanel Orientation="Vertical">
                        <LayoutAnchorablePane DockWidth="300">
                            <LayoutAnchorable Title="График" ContentId="Chart">
                                  
                            </LayoutAnchorable>
                        </LayoutAnchorablePane>
                    </LayoutPanel>-->

                    <LayoutAnchorablePane Name="ToolsPane" DockMinWidth="250">
                        <LayoutAnchorable Title="Настройки" ContentId="Settings" AutoHideMinWidth="250">
                            <controls:SettingsControl DataContext="{Binding SettingsViewModel}" x:Name="Settings" />
                        </LayoutAnchorable>
                    </LayoutAnchorablePane>

                </LayoutPanel>

                <!--<LayoutRoot.BottomSide>
                    <LayoutAnchorSide>

                        <LayoutAnchorGroup>
                           
                              
                        </LayoutAnchorGroup>  
                    </LayoutAnchorSide>
                </LayoutRoot.BottomSide>-->

            </LayoutRoot>
        </DockingManager>
        <StatusBar Grid.Row="2">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid Visibility="{Binding Status.ShowStatus, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="0">
                <TextBlock Text="{Binding Status.StatusInfoText}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <ProgressBar 
                    IsIndeterminate="{Binding Status.IsIndeterminate}"
                    Visibility="{Binding Status.ShowProgress, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Value="{Binding Status.StatusPercent}" Width="90" Height="16" />
            </StatusBarItem>
            <Separator Grid.Column="3"
                       Visibility="{Binding Status.ShowProgress, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <StatusBarItem Grid.Column="4" 
                           Visibility="{Binding Status.ShowProgress, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Text="{Binding Status.StatusProgressText}"  />
            </StatusBarItem>
            <Separator Grid.Column="5" 
                       Visibility="{Binding Status.ShowProgress, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <StatusBarItem Grid.Column="6" MinWidth="140">
                <TextBlock Text="{Binding Path=Status.StocksUpdatedIn5Sec, StringFormat={}Обновлено за 5 сек: {0}}" />
            </StatusBarItem>
            <Separator Grid.Column="7" />
            <StatusBarItem Grid.Column="8" MinWidth="140">
                <TextBlock Text="{Binding Path=Status.StocksUpdatedIn1Sec, StringFormat={}Обновлено за 1 сек: {0}}" />
            </StatusBarItem>
            <Separator Grid.Column="9" />
            <StatusBarItem Grid.Column="10" MinWidth="150">
                <TextBlock Text="{Binding Path=Status.TelegramQueryDepth, StringFormat={}Очередь уведомлений: {0}}" />
            </StatusBarItem>
            <Separator Grid.Column="11" />
            <StatusBarItem Grid.Column="12" MinWidth="150">
                <TextBlock Text="{Binding Path=Status.ResubscriptionAttemptsInTenMin, StringFormat={}Переподписок на тикер за 10 минут: {0}}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>
